
# This is the only docker-compose file needed for this project.
# All services (Oracle, Vault, LDAP, PlantUML, etc.) are defined here for the devcontainer.
version: '3.8'

services:
  # Main Oracle DB used with Vault
  oracle:
    image: gvenzl/oracle-xe:21-slim
    container_name: oracle-db
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      - ORACLE_PASSWORD=oracle123
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - oracle_data:/opt/oracle/oradata
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/oracle123@//localhost:1521/XE", "as", "sysdba", "<<<", "exit"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 300s
    restart: unless-stopped


  # Mock LDAP server 1
  mock-ldap-1:
    image: python:3.11-slim
    container_name: mock-ldap-1
    ports:
      - "1389:1389"
    volumes:
      - ./mock-ldap-server.py:/app/mock-ldap-server.py
    working_dir: /app
    command: python mock-ldap-server.py
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1389"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    depends_on:
      - oracle

  # Mock LDAP server 2
  mock-ldap-2:
    image: python:3.11-slim
    container_name: mock-ldap-2
    ports:
      - "1390:1389"
    volumes:
      - ./mock-ldap-server.py:/app/mock-ldap-server.py
    working_dir: /app
    command: python mock-ldap-server.py
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1389"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    depends_on:
      - oracle

  # Mock LDAP server 3
  mock-ldap-3:
    image: python:3.11-slim
    container_name: mock-ldap-3
    ports:
      - "1391:1389"
    volumes:
      - ./mock-ldap-server.py:/app/mock-ldap-server.py
    working_dir: /app
    command: python mock-ldap-server.py
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1389"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    depends_on:
      - oracle

  # Vault for secrets management
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    command: vault server -dev -log-level=info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/v1/sys/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=test-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_PLUGIN_DIRECTORY=/bin

  # Devcontainer main service
  devcontainer:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    depends_on:
      - oracle
      - vault
      - plantuml
    
  # PlantUML server for diagrams
  plantuml:
    image: plantuml/plantuml-server:jetty
    container_name: plantuml-server
    ports:
      - "8080:8080"
    environment:
      - JAVA_OPTS=-Djava.awt.headless=true
    restart: unless-stopped

volumes:
  oracle_data:
