<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="162px" preserveAspectRatio="none" style="width:441px;height:162px;background:#000000;" version="1.1" viewBox="0 0 441 162" width="441px" zoomAndPan="magnify"><defs/><g><rect fill="#270507" height="1" style="stroke:#270507;stroke-width:1.0;" width="1" x="0" y="0"/><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="137" x="5" y="17">PlantUML 1.2021.00</text><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="0" x="9" y="30.9688"/><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="427" x="5" y="44.9375">&lt;b&gt;This version of PlantUML is 1651 days old, so you should</text><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="427" x="5" y="58.9063">&lt;b&gt;consider upgrading from https://plantuml.com/download</text><rect fill="#33FF02" height="21.2969" style="stroke:#33FF02;stroke-width:1.0;" width="318" x="5" y="68.875"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="168" x="6" y="83.875">[From string (line 2) ]</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="104.1719"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="318" x="5" y="120.4688">@startuml ExecProcCmd_Complete_Flow</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="98" x="5" y="136.7656">!theme plain</text><text fill="#FF0000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="106" x="10" y="153.0625">Syntax Error?</text><!--MD5=[6a5951d4d4fd58a6abaed5e403004c19]
@startuml ExecProcCmd_Complete_Flow
!theme plain
skinparam backgroundColor #FFFFFF
skinparam defaultFontSize 10
skinparam activity {
    BackgroundColor #E8F4FD
    BorderColor #1976D2
    FontColor #000000
}
skinparam note {
    BackgroundColor #FFF3E0
    BorderColor #F57C00
}

title Complete Flow: ExecProcCmd Execution with Authentication & Database Connection

|#LightBlue|CLI Entry Point|
start
:User executes: exec-proc -u username -d database procedure;
note right: Entry Point

:ExecProcedureCmd.main(args);
:Create CommandLine with ExecProcedureCmd;
:Set exception handlers (ExecutionExceptionHandler, ParameterExceptionHandler);
:cmd.execute(args);

|#LightGreen|CLI Processing|
:ExecProcedureCmd.call();
:Validate required parameters (user, database);

if (Parameters valid?) then (no)
  :Return error code 1;
  stop
endif

|#LightCyan|Service Layer|
:ProcedureExecutionService.execute(request);
:Create ProcedureRequest with builder pattern;
note right: Builds request with type, database, user, procedure, input, output, vaultConfig

|#Yellow|Password Resolution|
:BaseDatabaseExecutionService.resolvePassword(request);
:Create PasswordRequest;
:PasswordResolver.resolvePassword(passwordRequest);

if (hasDirectVaultParams()?) then (yes)
  note left: Direct vault parameters provided
  :resolveWithDirectVaultParams();
  |#Orange|Vault Authentication|
  :VaultClient.fetchOraclePassword(\nvaultUrl, roleId, secretId, database, ait, user);
  :buildVaultBaseUrl(vaultBaseUrl);
  :authenticateToVault(fullVaultUrl, roleId, secretId);
  :POST /v1/auth/approle/login;
  :Extract client_token from response;
  :fetchOraclePasswordSync(fullVaultUrl, clientToken, dbName, ait, username);
  :GET /v1/secrets/database/oracle/static-creds/{dbName}-{ait}-{username};
  :Return Oracle password;
  |#Yellow|Password Resolution|
else (no)
  :resolveWithVaultLookup(request);
  :VaultClient.fetchOraclePassword(user, database);
  note right: Search vaults.yaml for user config
  
  if (vaultParams found?) then (yes)
    :getVaultParamsForUser(user, database);
    :Load vault config from vaults.yaml;
    :Extract role-id, secret-id, base-url, ait;
    |#Orange|Vault Authentication|
    :fetchOraclePassword(vaultBaseUrl, roleId, secretId, database, ait, user);
    :buildVaultBaseUrl(vaultBaseUrl);
    :authenticateToVault(fullVaultUrl, roleId, secretId);
    :POST /v1/auth/approle/login;
    :Extract client_token;
    :fetchOraclePasswordSync(fullVaultUrl, clientToken, dbName, ait, username);
    :GET /v1/secrets/database/oracle/static-creds/{dbName}-{ait}-{username};
    :Return Oracle password;
    |#Yellow|Password Resolution|
  else (no)
    :promptForPassword();
    note right: Manual password entry fallback
    :Read password from console;
  endif
endif

|#LightCyan|Connection Management|
:BaseDatabaseExecutionService.createConnection(request, password);
:DatabaseService.createConnection(type, database, user, password);
:ConnectionStringGenerator.createConnectionString(\ntype, database, user, password, null);

if (type == "oracle" && host == null?) then (yes)
  :OracleLdap.buildUrl();
  note right: Build Oracle LDAP URL for production database
  :Load LDAP config from application.yaml;
  :Build URL: jdbc:oracle:thin@ldap://oid1puser.bankofamerica...);
else (no)
  :OracleJdbc.buildUrl() or H2Jdbc.buildUrl();
  note right: Build JDBC URL for direct connection
endif

:DriverManager.getConnection(connectionUrl, user, password);

|#LightBlue|Procedure Execution|
:ProcedureExecutionService.executeWithConnection(request, conn);
:DatabaseService.executeProcedure(conn, procedure, input, output);
:ProcedureExecutor.executeProcedureWithStrings(\nconn, procFullName, inputParams, outputParams);

|#Pink|Database Operations|
:Parse procedure name and parameters;
:parseStringInputParams(inputParams);
:parseStringOutputParams(outputParams);
:buildCallString(procFullName, inputs.size(), outputs.size());
:Create CallableStatement;
:Set input parameters (setParameter);
:Register output parameters (registerOutParameter);
:Execute stored procedure (call.execute());
:Extract output parameters (call.getObject());
:Return result Map<String, Object>;

|#LightBlue|Result Processing|
:ExecutionResult.success(result);
:result.formatOutput(System.out);

if (Single result?) then (yes)
  :Print single value to console;
else (no)
  :Print key-value pairs to console;
endif

:Return success code 0;
stop

@enduml

PlantUML version 1.2021.00(Sun Jan 10 05:25:05 EST 2021)
(MIT source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>